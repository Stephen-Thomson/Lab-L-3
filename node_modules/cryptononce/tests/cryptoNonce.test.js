const createNonce = require('../src/createNonce')
const verifyNonce = require('../src/verifyNonce')

const MOCK_PRIVATE_KEY = '9427362bf43e94a5d78663fbd780cf618c376a9489c47094a8eb1459e0e0b612'

describe('createNonce', () => {
    afterEach(() => {
      jest.clearAllMocks()
    })
    it('does not create a nonce for an invalid private key', async () => {
      expect(() => createNonce(MOCK_PRIVATE_KEY + 'extra data')).toThrow(
        'Private key provided must be a 32 byte hex string!'
      )
    })
    it('creates a 256-bit nonce', async () => {
      const nonce = createNonce(MOCK_PRIVATE_KEY)
      expect(Buffer.from(nonce, 'base64').byteLength).toEqual(32)
    })
})

describe('verifyNonce', () => {
  afterEach(() => {
    jest.clearAllMocks()
  })
  it('does not verify an invalid nonce', async () => {
    const nonce = createNonce(MOCK_PRIVATE_KEY)
    expect(verifyNonce(nonce + 'ABC', MOCK_PRIVATE_KEY)).toEqual(false)
    expect(verifyNonce(nonce + '=', MOCK_PRIVATE_KEY)).toEqual(false)
    expect(verifyNonce(Buffer.from(nonce + Buffer.from('extra').toString('base64'), 'base64'), MOCK_PRIVATE_KEY)).toEqual(false)
  })
  it('does not verify an invalid private key', async () => {
    const nonce = createNonce(MOCK_PRIVATE_KEY)
    expect(verifyNonce(nonce, MOCK_PRIVATE_KEY + 'extra')).toEqual(false)
    expect(verifyNonce(nonce, MOCK_PRIVATE_KEY + ' ')).toEqual(false)
  })
  it('verifies a 256-bit nonce', async () => {
    const nonce1 = createNonce(MOCK_PRIVATE_KEY)
    const nonce2 = createNonce(MOCK_PRIVATE_KEY)
    expect(Buffer.from(nonce1, 'base64').byteLength).toEqual(32)
    expect(Buffer.from(nonce2, 'base64').byteLength).toEqual(32)
    expect(verifyNonce(nonce1, MOCK_PRIVATE_KEY)).toEqual(true)
    expect(verifyNonce(nonce2, MOCK_PRIVATE_KEY)).toEqual(true)
  })
})